
1.	I had planned to finish within one day. However Gauß-Krüger-Koordinatensystem was new to me and it took time to understand the basic idea behind coordinate system. so It took a bit longer than I had planned.  
2.	This problem could be solved in two ways. 
	 	a)  Show the  stops and points on simple HTML5 canvas. 
		b) I could show the whole points on the maps like google map or Open Street. 
	 		I didn't know however which you wanted to get the job done.  However I chose the second option even if the first option was easier for me to solve. 
3.	I followed the followings steps to solve the problem: 
		1.	Convert the csv files into json data file 
		2.	Read the json formatted data  with php and ajax scripts
		3.	Convert the Gauß-Krüger coordinate system into normal coordinate system and calculate  the distance between them. The distance calculation was done using  Javascript function. 
		4.	Show the points in google map using google javascript api. 
		5.	Make a directed graph based on the given data . 
		6.	Use Dijkstra's algorithm  algorithm to find the shortest distance between two selected points. 
		7.	Read the shortest path using asynchronous method and I used Ajax scripts to update the calculated distance. At the moment, it calculates everytime the distances and also convert the Gaus-Krüger coordinates into normal coordinate systems. That is the reason why this program is a bit slow sometiimes, however one can save the pre-calcualated distance and coordinates in the server and just let the program to display the shortest route. Then it will be much faster than it is now. 
		8.	The calculated distance should show also in the map. 
		9.	Show the points colorful at the end. and display the route also in written form. 
4	I didn't give much priority now for the layout and frontend technologies just becuase I wanted to solve the problem first and then integrate it in a webpage with corresponding layout

5.  How to use the program: 
	a) Put the whole content of the folder 'sinkacom' into a PHP running environment (e.g. Apache server). It can also be  something like  XAMPP, LAMPP etc .
	b) go the the folder sinkacom 
	c) Type the command : 
		composer install 
	  and enter to excute the command. This command will install the necessary dependencies 
	d) Go to the sinkacom/public folder  open it in a php running environment 
	e) Give the start stop at the input:  startstelle  e.g. 182
	f) Give the end stop at input:        Endstelle e.g. 145
	g) Calculate the route by clicking on: ROUTE FINDEN.
	h) This will show a route below the inputs and also mark the route line on the map.
		e.g. You will see the follow message:
		Ihre Route: 182=> 183=> 184=> 82=> 84=> 86=> 243=> 271=> 331=> 88=> 332=> 90=> 91=> 426=> 419=> 313=> 314=> 315=> 316=> 420=> 411=> 319=> 422=> 421=> 323=> 322=> 324=> 423=> 424=> 425=> 9=> 10=> 13=> 17=> 21=> 25=> 29=> 145.
		i.e. You start from point 182, then go to 183, then to 184 and then to 82 etc. 		
	i) To know the exact location of the stop, you  can bring the mouse on over each the points plotted in the map. 
	   This will show 
	    1) the stop name and 
	    2) the corresponding coordinates of the point or stop. 
	h) If you have problem in running the script, 
	   please feel free to contact me via email:
	   roshyara@gmail.com     


6. 	Names of the stops or points are given below:

1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
222,
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
282,
283,
284,
285,
286,
287,
288,
289,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
301,
302,
303,
304,
305,
306,
307,
308,
309,
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
322,
323,
324,
325,
326,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
346,
347,
348,
349,
350,
351,
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
383,
384,
385,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
413,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
425,
426,
427,
429


